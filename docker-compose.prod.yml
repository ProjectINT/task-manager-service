services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-taskmgr}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-taskmgr}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - task-manager-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-taskmgr} -d ${POSTGRES_DB:-taskmgr}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    networks:
      - task-manager-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: ghcr.io/projectint/task-manager-service:latest
    restart: always
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${POSTGRES_USER:-taskmgr}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-taskmgr}?schema=public
      DIRECT_URL: postgresql://${POSTGRES_USER:-taskmgr}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-taskmgr}
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_USERNAME: ""
      REDIS_PASSWORD: ""
      REDIS_TLS: "false"
      PRISMA_SCHEMA_DISABLE_ADVISORY_LOCK: "1"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "127.0.0.1:3001:3001"
    networks:
      - task-manager-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["sh", "-c", "npx prisma migrate deploy && node dist/backend/src/main.js"]

volumes:
  pgdata:
    driver: local

networks:
  task-manager-network:
    driver: bridge
